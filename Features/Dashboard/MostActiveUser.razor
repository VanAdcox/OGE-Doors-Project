@inject FileProcessingService fps


<MudPaper Class="pa-4 ma-2">
	@if(mostActiveUser != null) {
		<h2>Most Active User</h2>
		<p>@mostActiveUser.Hash</p>
		<p>@mostActiveUser.Scans total scans</p>
	}
	else {
		<p>Loading...</p>
	}
</MudPaper>

@code {
	private dynamic mostActiveUser;

	protected override void OnInitialized() {
		fps.OnDataProcessed += Recalculate;
		fps.OnFilterChanged += Recalculate;
	}

	private async void Recalculate() {
		var filteredEvents = fps.GetFilteredEvents();
		if(filteredEvents != null && filteredEvents.Any()) {
			mostActiveUser = filteredEvents
				.GroupBy(e => e.IdHash)
				.OrderByDescending(g => g.Count())
				.Select(g => new { Hash = g.Key, Scans = g.Count() })
				.FirstOrDefault();
			StateHasChanged();
		}
	}
}

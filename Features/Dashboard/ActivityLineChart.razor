@inject FileProcessingService fps


@if(_series.Count != 0) {
	<MudChart ChartType="ChartType.Line" ChartSeries="@_series" XAxisLabels="@_xAxisLabels" ChartOptions="@_options" Width="100%" Height="350px"></MudChart>
}
else {
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="300px" Width="500px"/>
}

@code {

	private List<ChartSeries> _series = new();
	private ChartOptions _options = new();
	private string[] _xAxisLabels = {};

	protected override void OnInitialized() {
		fps.OnDataProcessed += OnDataProcessed;
		_options.InterpolationOption = InterpolationOption.NaturalSpline;
	}

	private void OnDataProcessed() {
		if(fps.ReaderEvents != null && fps.ReaderEvents.Any()) {
			_series = new();
			_xAxisLabels = new string[0];

			var dailyCounts = fps.ReaderEvents
				.GroupBy(e => e.EventTimeUTC.Date)
				.OrderBy(g => g.Key)
				.Select(g => new
				{
					Date = g.Key.ToString("MMM dd"),
					Count = g.Count()
				})
				.ToList();

			_xAxisLabels = dailyCounts.Select(x => x.Date).ToArray();
			
			_series.Add( new ChartSeries{ 
					Name = "Scans",
					Data =  dailyCounts.Select(x => (double)x.Count).ToArray()
				}
			);

		}
		StateHasChanged();
	}
}

@inject FileProcessingService fps

@if(mostActiveReader != null) {
	<h2>Most Active Reader</h2>
	<p>Reader: (@mostActiveReader.DevId, @mostActiveReader.Machine)</p>
	<p>@mostActiveReader.Scans total scans</p>
}
else {
	<p>Loading...</p>
}

@code {
	private dynamic mostActiveReader;

	protected override void OnInitialized() {
		fps.OnDataProcessed += OnDataProcessed;
	}

	private void OnDataProcessed() {
		if(fps.ReaderEvents != null && fps.ReaderEvents.Any()) {
			mostActiveReader = fps.ReaderEvents
				.GroupBy(e => new { e.DevId, e.Machine })
				.OrderByDescending(g => g.Count())
				.Select(g => new { g.Key.DevId, g.Key.Machine, Scans = g.Count() })
				.FirstOrDefault();
			StateHasChanged();
		}
	}
}
